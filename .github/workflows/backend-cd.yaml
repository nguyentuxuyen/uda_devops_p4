name: Backend Continuous Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'starter/backend/**'
  
env:
  PYTHON_VERSION: '3.10'

jobs:
  lint:
    name: Running linter
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: starter/backend

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install pipenv
      run: pip install pipenv

    - name: Install pipenv
      run: pipenv install

    - name: Lint code
      run: pipenv run lint

  test:
    name: Running tests
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: starter/backend

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{env.PYTHON_VERSION}}

    - name: Install pipenv
      run: pip install pipenv

    - name: Install pipenv
      run: pipenv install

    - name: Run tests
      run: pipenv run test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    needs:
      - lint
      - test 
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Install pipenv
      run: pip install pipenv

    - name: Install pipenv
      run: pipenv install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      run: |
        docker build -t backend .
        docker tag backend:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:latest
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:latest
    
    - name: Configure kubectl
      run: |
        aws eks update-kubeconfig --name cluster --region us-east-1

    - name: Set image tag and apply to cluster
      run: |
        cd k8s
        kustomize edit set image backend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend:latest
        kustomize build | kubectl apply -f -